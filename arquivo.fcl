FUNCTION_BLOCK meuTeste1	// Block definition (there may be more than one block per file)

// Define input variables
VAR_INPUT				
	PAS : REAL;
	PAD : REAL;
END_VAR

// Define output variable
VAR_OUTPUT				
	DIAGNOSTICO : REAL;
END_VAR

// Fuzzify input variable 'PAS': {'baixa', 'normal' , 'alta'}
FUZZIFY PAS		
	TERM baixa := (101, 1) (102, 0) ; 
	TERM normal := (98, 0)(99, 1) (141,1) (142,0);
	TERM alta := (138, 0) (139, 1);
END_FUZZIFY

// Fuzzify input variable 'PAD': { 'baixa', 'normal' , 'alta' }
FUZZIFY PAD			
	TERM baixa := (61, 1) (62, 0) ; 
	TERM normal := (58, 0) (59,1) (91,1) (92,0);
	TERM alta := (92, 0) (99, 1);
END_FUZZIFY

// Defuzzify output variable 'DIAGNOSTICO' : {'baixa', 'normal' , 'alta' , 'indef' }
DEFUZZIFY DIAGNOSTICO			
	TERM baixa := (0,0) (5,1) (10,0);
	TERM normal := (10,0) (15,1) (20,0);
	TERM alta := (20,0) (25,1) (30,0);
	TERM indef := (30,0) (35,1) (40,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	RULE 1 : IF PAS IS baixa AND PAD IS baixa THEN DIAGNOSTICO IS baixa;
	RULE 2 : IF PAS IS baixa AND PAD IS normal THEN DIAGNOSTICO IS baixa; 
	RULE 3 : IF PAS IS baixa AND PAD IS alta THEN DIAGNOSTICO IS indef;
	RULE 4 : IF PAS IS normal AND PAD IS baixa THEN DIAGNOSTICO IS baixa;
	RULE 5 : IF PAS IS normal AND PAD IS normal THEN DIAGNOSTICO IS normal; 
	RULE 6 : IF PAS IS normal AND PAD IS alta THEN DIAGNOSTICO IS alta;
	RULE 7 : IF PAS IS alta AND PAD IS baixa THEN DIAGNOSTICO IS baixa;
	RULE 8 : IF PAS IS alta AND PAD IS normal THEN DIAGNOSTICO IS alta; 
	RULE 9 : IF PAS IS alta AND PAD IS alta THEN DIAGNOSTICO IS  alta;
END_RULEBLOCK

END_FUNCTION_BLOCK